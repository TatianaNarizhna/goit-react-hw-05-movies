{"version":3,"sources":["pages/ReviewsPage/ReviewsPage.js"],"names":["ReviewsPage","movieId","useParams","useState","reviews","setReviews","useEffect","moviesAPI","then","results","length","map","author","content","id"],"mappings":"iOAIe,SAASA,IACpB,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,qBAAU,WACRC,IACoBN,GACnBO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACFA,GACCJ,EAAWI,QAGlB,CAACR,IAGA,8BACKG,EAAQM,OAAS,EACd,6BAEQN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACR,+BACI,6BAAKF,IACL,4BAAIC,MAFCC,QAOnB","file":"static/js/ReviewsPage.ec078c8f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as moviesAPI from \"../../components/services/movieApi\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function ReviewsPage () {\r\n    const { movieId } = useParams();\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n    useEffect(() => {\r\n      moviesAPI\r\n      .fetchMoviesReviews(movieId)\r\n      .then(({ results }) => {\r\n          if(results) {\r\n              setReviews(results)\r\n          }\r\n      })\r\n    }, [movieId])\r\n\r\n    return (\r\n        <div>\r\n            {reviews.length > 0 ? (\r\n                <ul>\r\n                    {\r\n                        reviews.map(({ author, content, id }) => (\r\n                            <li key={id}>\r\n                                <h4>{author}</h4>\r\n                                <p>{content}</p>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            ) : ( <p>We don`t have any reviews for this movie</p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"sourceRoot":""}