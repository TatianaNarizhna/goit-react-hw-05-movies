{"version":3,"sources":["pages/ReviewsPage/ReviewsPage.js"],"names":["ReviewsPage","movieId","useParams","useState","reviews","setReviews","useEffect","moviesAPI","then","results","length","map","author","content","id"],"mappings":"iOAIe,SAASA,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,qBAAU,WACRC,IAA6BN,GAASO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACxCA,GACFJ,EAAWI,QAGd,CAACR,IAGF,8BACGG,EAAQM,OAAS,EAChB,6BACGN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,+BACE,6BAAKF,IACL,4BAAIC,MAFGC,QAOb","file":"static/js/ReviewsPage.233d7a72.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as moviesAPI from \"../../services/movieApi\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function ReviewsPage() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    moviesAPI.fetchMoviesReviews(movieId).then(({ results }) => {\n      if (results) {\n        setReviews(results);\n      }\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h4>{author}</h4>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </div>\n  );\n}\n"],"sourceRoot":""}