{"version":3,"sources":["services/movieApi.js","components/MovieDetails/MovieDetails.module.css","components/MovieDetails/MovieDetails.js","routes.js","pages/MovieDetailsPage/MovieDetailsPage.js"],"names":["BASE_URL","API_KEY","fetchTrend","axios","get","then","response","data","results","fetchMoviesBySearch","search","page","fetchMovieDetails","movieId","fetchMovieCredits","fetchMoviesReviews","module","exports","MovieDetails","poster_path","title","overview","genres","vote_average","location","useLocation","console","log","className","s","details","src","alt","detailsDescription","map","genre","name","id","CastPage","lazy","ReviewsPage","MovieDatailsPage","useParams","match","useRouteMatch","history","useHistory","useState","movie","setMovie","useEffect","moviesAPI","catch","Error","Button","type","onClick","state","push","from","variant","color","to","pathname","url","fallback","path"],"mappings":"yIAAA,+LAEMA,EAAW,+BACXC,EAAU,mCAET,SAASC,IACd,OAAOC,IACJC,IADI,UACGJ,EADH,qCACwCC,IAC5CI,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,WAG/B,SAASC,EAAoBC,GAAmB,IAAXC,EAAU,uDAAH,EACjD,OAAOR,IACJC,IADI,UAEAJ,EAFA,iCAEiCC,EAFjC,kBAEkDS,EAFlD,iBAEiEC,EAFjE,wBAIJN,MAAK,SAACC,GAAD,OAAcA,EAASC,QAG1B,SAASK,EAAkBC,GAChC,OAAOV,IACJC,IADI,UACGJ,EADH,kBACqBa,EADrB,oBACwCZ,EADxC,oBAEJI,MAAK,SAACC,GAAD,OAAcA,EAASC,QAG1B,SAASO,EAAkBD,GAChC,OAAOV,IACJC,IADI,UAEAJ,EAFA,kBAEkBa,EAFlB,4BAE6CZ,EAF7C,oBAIJI,MAAK,qBAAGE,QAGN,SAASQ,EAAmBF,GAAoB,IAAXF,EAAU,uDAAH,EACjD,OAAOR,IACJC,IADI,UAEAJ,EAFA,kBAEkBa,EAFlB,4BAE6CZ,EAF7C,gCAE4EU,IAEhFN,MAAK,qBAAGE,U,mBCrCbS,EAAOC,QAAU,CAAC,QAAU,8BAA8B,mBAAqB,2C,wJCEhE,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,YACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,OACAC,EACC,EADDA,aAEMC,EAAWC,cAEjB,OADAC,QAAQC,IAAIH,GAEV,sBAAKI,UAAWC,IAAEC,QAAlB,UACE,qBAAKC,IAAG,yCAAoCZ,GAAea,IAAKZ,IAChE,sBAAKQ,UAAWC,IAAEI,mBAAlB,UACE,6BAAKb,IACL,6CACc,iCAAsB,GAAfG,EAAP,UAEd,0CALF,YAMW,+BAAOF,IAChB,wCACA,6BACGC,GACCA,EAAOY,KAAI,SAACC,GAAD,OAAW,6BAAoBA,EAAMC,MAAjBD,EAAME,eCxBlC,ICeTC,EAAWC,gBAAK,kBACpB,iCAEIC,EAAcD,gBAAK,kBACvB,gCAGa,SAASE,IAAoB,IAAD,YACjC5B,EAAY6B,cAAZ7B,QACF8B,EAAQC,cACRpB,EAAWC,cACXoB,EAAUC,cAChBpB,QAAQC,IAAIkB,GACZ,MAA0BE,mBAAS,CACjC5B,YAAa,KACbC,MAAO,KACPC,SAAU,KACVE,aAAc,KACdD,OAAQ,KACRe,GAAI,OANN,mBAAOW,EAAP,KAAcC,EAAd,KASAC,qBAAU,WACRC,IACqBtC,GAClBR,MAAK,gBAAGc,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,SAAUE,EAAjC,EAAiCA,aAAcD,EAA/C,EAA+CA,OAAQe,EAAvD,EAAuDA,GAAvD,OACJY,EAAS,CACP9B,cACAC,QACAC,WACAC,SACAC,eACAc,UAGHe,MAAM1B,QAAQC,IAAI0B,UACpB,CAACxC,IASJ,OACE,qCACE,cAACyC,EAAA,EAAD,CACEC,KAAK,SACLC,QAXe,WAAO,IAAD,MACI,EAA7B,UAAIhC,QAAJ,IAAIA,GAAJ,UAAIA,EAAUiC,aAAd,aAAI,EAAiB/C,OACnB,OAAOmC,EAAQa,KAAR,wBAAuBlC,QAAvB,IAAuBA,GAAvB,UAAuBA,EAAUiC,aAAjC,aAAuB,EAAiB/C,SAEjDmC,EAAQa,KAAR,iBAAalC,QAAb,IAAaA,GAAb,UAAaA,EAAUiC,aAAvB,aAAa,EAAiBE,YAA9B,QAAsC,MAQlCC,QAAQ,WACRC,MAAM,UAJR,qBASCb,GACC,cAAC9B,EAAD,CACEC,YAAa6B,EAAM7B,YACnBC,MAAO4B,EAAM5B,MACbC,SAAU2B,EAAM3B,SAChBC,OAAQ0B,EAAM1B,OACdC,aAAcyB,EAAMzB,aACpBc,GAAIW,EAAMnC,UAId,gCACE,wDACA,uBACA,+BACE,6BACE,cAAC,IAAD,CAASiD,GAAI,CACXC,SAAS,GAAD,OAAKpB,EAAMqB,IAAX,SACRP,MAAO,CACLE,KAAI,iBAAEnC,QAAF,IAAEA,GAAF,UAAEA,EAAUiC,aAAZ,aAAE,EAAiBE,YAAnB,QAA2B,IAC/BjD,OAAM,OAAEc,QAAF,IAAEA,GAAF,UAAEA,EAAUiC,aAAZ,aAAE,EAAiB/C,SAJ7B,oBAQF,6BACE,cAAC,IAAD,CAASoD,GAAI,CACXC,SAAS,GAAD,OAAKpB,EAAMqB,IAAX,YACRP,MAAO,CACLE,KAAI,iBAAEnC,QAAF,IAAEA,GAAF,UAAEA,EAAUiC,aAAZ,aAAE,EAAiBE,YAAnB,QAA2B,IAC/BjD,OAAM,OAAEc,QAAF,IAAEA,GAAF,UAAEA,EAAUiC,aAAZ,aAAE,EAAiB/C,SAJ7B,6BAUN,uBAEA,eAAC,WAAD,CAAUuD,SAAU,4CAApB,UACE,cAAC,IAAD,CAAOC,KAAI,UAAKvB,EAAMuB,KAAX,SAAX,SACE,cAAC5B,EAAD,MAGF,cAAC,IAAD,CAAO4B,KAAI,UAAKvB,EAAMuB,KAAX,YAAX,SACE,cAAC1B,EAAD","file":"static/js/movie-details-page.89bd28af.chunk.js","sourcesContent":["import axios from \"axios\";\n// const axios = require('axios');\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"a746c25728fd41f4fba1ed9293c9d732\";\n\nexport function fetchTrend() {\n  return axios\n    .get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`)\n    .then((response) => response.data.results);\n}\n\nexport function fetchMoviesBySearch(search, page = 1) {\n  return axios\n    .get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${search}&page=${page}include_adult=false`\n    )\n    .then((response) => response.data);\n}\n\nexport function fetchMovieDetails(movieId) {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then((response) => response.data);\n}\n\nexport function fetchMovieCredits(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(({ data }) => data);\n}\n\nexport function fetchMoviesReviews(movieId, page = 1) {\n  return axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n    )\n    .then(({ data }) => data);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"MovieDetails_details__3t0-p\",\"detailsDescription\":\"MovieDetails_detailsDescription__2IWbP\"};","import s from \"../MovieDetails/MovieDetails.module.css\";\nimport { useLocation  } from \"react-router-dom\";\n\nexport default function MovieDetails({\n  poster_path,\n  title,\n  overview,\n  genres,\n  vote_average,\n}) {\n  const location = useLocation();\n  console.log(location)\n  return (\n    <div className={s.details}>\n      <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n      <div className={s.detailsDescription}>\n        <h2>{title}</h2>\n        <p>\n          User Score: <span>{vote_average * 10}%</span>\n        </p>\n        <h3>Overview</h3>\n        Overview:<span>{overview}</span>\n        <h4>Genres</h4>\n        <ul>\n          {genres &&\n            genres.map((genre) => <li key={genre.id}>{genre.name}</li>)}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  home: \"/\",\n  movies: \"/movies\",\n  movieDetails: \"/movies/:movieId\",\n  cast: \"/movies/:movieId/cast\",\n  reviews: \"/movies/:movieId/reviews\",\n};\n","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect, lazy, Suspense } from \"react\";\nimport {\n  Route,\n  useRouteMatch,\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport * as moviesAPI from \"../../services/movieApi\";\nimport MovieDetails from \"../../components/MovieDetails/MovieDetails\";\nimport routes from \"../../routes\";\n// import PropTypes from \"prop-types\";\n// import CastPage from \"../CastPage/CastPage\";\n// import ReviewsPage from \"../ReviewsPage/ReviewsPage\";\nconst CastPage = lazy(() =>\n  import(\"../CastPage/CastPage.js\" /* webpackChunkName: \"CastPage\" */)\n);\nconst ReviewsPage = lazy(() =>\n  import(\"../ReviewsPage/ReviewsPage\" /* webpackChunkName: \"ReviewsPage\" */)\n);\n\nexport default function MovieDatailsPage() {\n  const { movieId } = useParams();\n  const match = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n  console.log(history);\n  const [movie, setMovie] = useState({\n    poster_path: null,\n    title: null,\n    overview: null,\n    vote_average: null,\n    genres: null,\n    id: null,\n  });\n\n  useEffect(() => {\n    moviesAPI\n      .fetchMovieDetails(movieId)\n      .then(({ poster_path, title, overview, vote_average, genres, id }) =>\n        setMovie({\n          poster_path,\n          title,\n          overview,\n          genres,\n          vote_average,\n          id,\n        })\n      )\n      .catch(console.log(Error));\n  }, [movieId]);\n\n  const buttonGoBack = () => {\n    if (location?.state?.search) {\n      return history.push(`?query=${location?.state?.search}`);\n    }\n    history.push(location?.state?.from ?? \"/\");\n  };\n\n  return (\n    <>\n      <Button\n        type=\"button\"\n        onClick={buttonGoBack}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        Go back\n      </Button>\n\n      {movie && (\n        <MovieDetails\n          poster_path={movie.poster_path}\n          title={movie.title}\n          overview={movie.overview}\n          genres={movie.genres}\n          vote_average={movie.vote_average}\n          id={movie.movieId}\n        />\n      )}\n\n      <div>\n        <h3>Additional information</h3>\n        <hr />\n        <ul>\n          <li>\n            <NavLink to={{\n              pathname: `${match.url}/cast`,\n              state: {\n                from: location?.state?.from ?? '/',\n                search: location?.state?.search,\n              }\n            }}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to={{\n              pathname: `${match.url}/reviews`,\n              state: {\n                from: location?.state?.from ?? '/',\n                search: location?.state?.search,\n              }\n            }}>Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n      <hr />\n\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <Route path={`${match.path}/cast`}>\n          <CastPage />\n        </Route>\n\n        <Route path={`${match.path}/reviews`}>\n          <ReviewsPage />\n        </Route>\n      </Suspense>\n    </>\n  );\n}\n\n// MovieDatailsPage.propTypes = {\n//   poster_path: PropTypes.string,\n//   title: PropTypes.string,\n//   overview: PropTypes.string.isRequired,\n//   genres: PropTypes.array.isRequired,\n//   vote_average: PropTypes.number.isRequired,\n//   id: PropTypes.number.isRequired,\n// }\n"],"sourceRoot":""}